.loader {
  background-image: linear-gradient(
    -100deg,
    rgba(190, 233, 228, 0.56) 0%,
    rgba(242, 243, 242, 0.725) 100%
  );
  padding: 4vw;
  &__title {
    letter-spacing: 0.05em;
    text-align: center;
    font-size: 35px;
    font-weight: 600;
  }

  &__container {
    display: flex;
    text-align: center;
  }
  &__lefthalf {
    font-size: 20px;
    // background-color: #ff9e2c;
    flex: 1;
    &__text {
      font-weight: 500;
    }
    &__text > span {
      font-weight: 600;
    }
  }
  &__righthalf {
    position: relative;
    &__number {
      margin: 0;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 60px;
      color: crimson;
      font-weight: 800;
    }
    &__number > span {
      padding-right: 10px;
    }
    // background-color: #cf8e43;
    flex: 1;
  }

  &__circle-container {
    text-align: center;
    display: flex;
    &__left {
      flex: 1;
      // background-color: #cf8e43;
    }
    &__right {
      font-size: 20px;
      flex: 1;
      padding: 2.5vw;
      margin-bottom: -3vw;
      // background-color: #ff9e2c;
    }
  }

  &__circle-container-reverse {
    text-align: center;
    display: flex;
    &__left {
      font-size: 20px;
      padding: 2.5vw;
      flex: 1;
      // background-color: #cf8e43;
    }
    &__right {
      flex: 1;

      // background-color: #ff9e2c;
    }
  }
}
.circle-text {
  font-size: 30px;
  margin-top: -20px;
  margin-left: 5px;
  color: black;
}
.children {
  // background-color: blue;
  width: 100%;
  // padding-right: 30px;

  &__divtext {
    width: 30%;
    text-align: center;
  }
  &__h5 {
    background-color: red;
  }
}

.children > div > div {
  margin: auto;
  width: 100% !important;
  @media screen and (min-width: 800px) {
    // width: 50% !important;
    width: 50% !important;
  }
  // @media screen and (max-width: 700px) {
  //   width: 200% !important;
  // }
  // @media screen and (max-width: 500px) {
  //   width: 250% !important;
  // }
}
/*
 * react-circular-progressbar styles
 * All of the styles in this file are configurable!
 */

.CircularProgressbar {
  /*
     * This fixes an issue where the CircularProgressbar svg has
     * 0 width inside a "display: flex" container, and thus not visible.
     */

  width: 100%;
  /*
     * This fixes a centering issue with CircularProgressbarWithChildren:
     * https://github.com/kevinsqi/react-circular-progressbar/issues/94
     */
  vertical-align: middle;
}

.CircularProgressbar .CircularProgressbar-children {
  height: 10vh;
}

.CircularProgressbar .CircularProgressbar-path {
  stroke: rgba(53, 40, 233, 0.56);
  stroke-linecap: round;
  stroke-width: 8px;
  transition: stroke-dashoffset 0.5s ease 0s;
}

.CircularProgressbar .CircularProgressbar-trail {
  stroke: #d6d6d6;
  /* Used when trail is not full diameter, i.e. when props.circleRatio is set */
  stroke-linecap: round;
}
// .CircularProgressbar-text {
//   padding-top: 5vw;
// }
.CircularProgressbar .CircularProgressbar-text {
  fill: #3e98c7;
  font-size: 20px;
  dominant-baseline: middle;
  text-anchor: middle;
}

.CircularProgressbar .CircularProgressbar-background {
  fill: #d6d6d6;
}

/*
   * Sample background styles. Use these with e.g.:
   *
   *   <CircularProgressbar
   *     className="CircularProgressbar-inverted"
   *     background
   *     percentage={50}
   *   />
   */
.CircularProgressbar.CircularProgressbar-inverted
  .CircularProgressbar-background {
  fill: rgba(190, 233, 228, 0.56);
}

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-text {
  fill: #fff;
}

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-path {
  stroke: #fff;
}

.CircularProgressbar.CircularProgressbar-inverted .CircularProgressbar-trail {
  stroke: transparent;
}
